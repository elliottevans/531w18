K <- 130
ma2 <- seq(from=0.2,to=1.1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Mean,order=c(2,0,2),
fixed=c(NA,NA,NA,ma2[k],NA)))
}
plot(profile_loglik~ma2,ty="l")
K <- 120
ma2 <- seq(from=0.2,to=1.1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Mean,order=c(2,0,2),
fixed=c(NA,NA,NA,ma2[k],NA)))
}
plot(profile_loglik~ma2,ty="l")
K <- 110
ma2 <- seq(from=0.2,to=1.1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Mean,order=c(2,0,2),
fixed=c(NA,NA,NA,ma2[k],NA)))
}
plot(profile_loglik~ma2,ty="l")
K <- 100
ma2 <- seq(from=0.2,to=1.1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Mean,order=c(2,0,2),
fixed=c(NA,NA,NA,ma2[k],NA)))
}
plot(profile_loglik~ma2,ty="l")
K <- 1000
ma2 <- seq(from=0.2,to=1.1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Mean,order=c(2,0,2),
fixed=c(NA,NA,NA,ma2[k],NA)))
}
plot(profile_loglik~ma2,ty="l")
K <- 500
ma2 <- seq(from=0.2,to=1.1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Mean,order=c(2,0,2),
fixed=c(NA,NA,NA,ma2[k],NA)))
}
plot(profile_loglik~ma2,ty="l")
K <- 100
ma2 <- seq(from=0.2,to=1.1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Mean,order=c(2,0,2),
fixed=c(NA,NA,NA,ma2[k],NA)))
}
plot(profile_loglik~ma2,ty="l")
K <- 200
ma2 <- seq(from=0.2,to=1.1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Mean,order=c(2,0,2),
fixed=c(NA,NA,NA,ma2[k],NA)))
}
plot(profile_loglik~ma2,ty="l")
K <- 300
ma2 <- seq(from=0.2,to=1.1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Mean,order=c(2,0,2),
fixed=c(NA,NA,NA,ma2[k],NA)))
}
plot(profile_loglik~ma2,ty="l")
K <- 500
ma2 <- seq(from=0.2,to=1.1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Mean,order=c(2,0,2),
fixed=c(NA,NA,NA,ma2[k],NA)))
}
plot(profile_loglik~ma2,ty="l")
head(profile_loglik)
abs(profile_loglik)
which.max(abs(profile_loglik))
ma2
which.max(profile_loglik)
ma2[445]
plot(profile_loglik)
ma2_max = ma2[which.max(profile_loglik)]
ma2_max
?which
which(which.max(profile_loglik) - profile_loglik < 1.92)
which.max(profile_loglik)
which(profile_loglik[which.max(profile_loglik)] - profile_loglik < 1.92)
set.seed(1)
draws <- rnorm(100)^2
dens <- density(draws)
plot(dens)
plot(dens~c(1:100))
set.seed(1)
draws <- rnorm(100)^2
dens <- density(draws)
plot(dens~c(1:100))
dens
plot(draws~c(1:100))
which(profile_loglik[which.max(profile_loglik)] - profile_loglik < 1.92)
which(profile_loglik[which.max(profile_loglik)] - profile_loglik < 1.92)
which(ma2[which.max(profile_loglik)] - profile_loglik < 1.92)
which(profile_loglik[which.max(profile_loglik)] - profile_loglik < 1.92)
ma2[which(profile_loglik[which.max(profile_loglik)] - profile_loglik < 1.92)]
polygon(c( ma2[ma2>=0.8637275], 0.8637275 ),  c(profile_loglik[ma2>=0.8637275],0 ), col="red")
plot(profile_loglik~ma2,ty="l")
polygon(c( ma2[ma2>=0.8637275], 0.8637275 ),  c(profile_loglik[ma2>=0.8637275],0 ), col="red")
polygon(c( ma2[ma2>=0.8637275], 0.8637275 ),  c(profile_loglik[ma2<=0.8637275],0 ), col="red")
polygon(c( ma2[ma2>=0.8637275], 0.8637275 ),  c(profile_loglik[ma2>=0.8637275],-351 ), col="red")
polygon(c( ma2[ma2>=0.8637275], 0.8637275 ),  c(profile_loglik[ma2>=0.8637275],min(profile_loglik) ), col="red")
ma2[which(profile_loglik[which.max(profile_loglik)] - profile_loglik < 1.92)]
ma2_prof_conf = ma2[which(profile_loglik[which.max(profile_loglik)] - profile_loglik < 1.92)]
min(ma2_prof_conf)
max(ma2_prof_conf)
plot(profile_loglik~ma2,ty="l")
min(ma2_prof_conf); max(ma2_prof_conf)
arma22
arma22$coef
arma22$coef['ma2']
arma22$coef['ma2']
arma22$var.coef
arma22$var.coef[4,4]
sqrt(arma22$var.coef[4,4])
arma22$var.coef[4,4] + c(-1,-1) * 1.96*sqrt(arma22$var.coef[4,4])
arma22$coef + c(-1,-1) * 1.96*sqrt(arma22$var.coef[4,4])
arma22$coef['ma2'] + c(-1,-1) * 1.96*sqrt(arma22$var.coef[4,4])
arma22$coef['ma2']
arma22$coef['ma2']  + 1.96*sqrt(arma22$var.coef[4,4])
arma22$coef['ma2'] + c(-1,1) * 1.96*sqrt(arma22$var.coef[4,4])
# 95% wald confidence interval
arma22$coef['ma2'] + c(-1,1) * 1.96*sqrt(arma22$var.coef[4,4])
# 95% Profile likelihood interval
c(min(ma2_prof_conf), max(ma2_prof_conf))
ma2_max
ma2_max-0.8637275
ma2_max-1.1000000
# 95% wald confidence interval
round(arma22$coef['ma2'] + c(-1,1) * 1.96*sqrt(arma22$var.coef[4,4]),4)
# 95% Profile likelihood interval
round(c(min(ma2_prof_conf), max(ma2_prof_conf)),4)
#Simulation study for MA2 coefficient
set.seed(57892330)
J <- 1000
params <- coef(huron_arma21)
ar <- params[grep("^ar",names(params))]
ma <- params[grep("^ma",names(params))]
intercept <- params["intercept"]
sigma <- sqrt(huron_arma21$sigma2)
theta <- matrix(NA,nrow=J,ncol=length(params),dimnames=list(NULL,names(params)))
for(j in 1:J){
Yj <- arima.sim(
list(ar=ar,ma=ma),
n=length(huron_depth),
sd=sigma
)+intercept
theta[j,] <- coef(arima(Yj,order=c(2,0,1)))
}
hist(theta[,"ma1"],freq=FALSE)
#Simulation study for MA2 coefficient
set.seed(57892330)
J <- 1000
params <- coef(arma22)
ar <- params[grep("^ar",names(params))]
ma <- params[grep("^ma",names(params))]
intercept <- params["intercept"]
sigma <- sqrt(arma22$sigma2)
theta <- matrix(NA,nrow=J,ncol=length(params),dimnames=list(NULL,names(params)))
for(j in 1:J){
Yj <- arima.sim(
list(ar=ar,ma=ma),
n=length(dat$Mean),
sd=sigma
)+intercept
theta[j,] <- coef(arima(Yj,order=c(2,0,1)))
}
hist(theta[,"ma1"],freq=FALSE)
ar <- params[grep("^ar",names(params))]
ma <- params[grep("^ma",names(params))]
intercept <- params["intercept"]
sigma <- sqrt(arma22$sigma2)
theta <- matrix(NA,nrow=J,ncol=length(params),dimnames=list(NULL,names(params)))
for(j in 1:J){
Yj <- arima.sim(
list(ar=ar,ma=ma),
n=length(dat$Mean),
sd=sigma
)+intercept
theta[j,] <- coef(arima(Yj,order=c(2,0,1)))
}
theta
dim(theta)
params
#Simulation study for MA2 coefficient
set.seed(57892330)
J <- 1000
params <- coef(arma22)
ar <- params[grep("^ar",names(params))]
ma <- params[grep("^ma",names(params))]
intercept <- params["intercept"]
sigma <- sqrt(arma22$sigma2)
theta <- matrix(NA,nrow=J,ncol=length(params),dimnames=list(NULL,names(params)))
for(j in 1:J){
Yj <- arima.sim(
list(ar=ar,ma=ma),
n=length(dat$Mean),
sd=sigma
)+intercept
theta[j,] <- coef(arima(Yj,order=c(2,0,2)))
}
hist(theta[,"ma1"],freq=FALSE)
#Simulation study for MA2 coefficient
set.seed(57892330)
J <- 1000
params <- coef(arma22)
ar <- params[grep("^ar",names(params))]
ma <- params[grep("^ma",names(params))]
intercept <- params["intercept"]
sigma <- sqrt(arma22$sigma2)
theta <- matrix(NA,nrow=J,ncol=length(params),dimnames=list(NULL,names(params)))
for(j in 1:J){
Yj <- arima.sim(
list(ar=ar,ma=ma),
n=length(dat$Mean),
sd=sigma
)+intercept
theta[j,] <- coef(arima(Yj,order=c(2,0,2)))
}
hist(theta[,"ma2"],freq=FALSE)
plot(density(theta[,"ma2"],bw=0.05))
plot(density(theta[,"ma2"],bw=0.05))
?density
plot(density(theta[,"ma2"],bw=0.05,na.rm = T))
setwd("~/Desktop/531w18/hw02")
dat <- read.table(file="http://ionides.github.io/531w18/01/ann_arbor_weather.csv",header=TRUE)
head(dat)
#time plot
plot(Low~Year,data=dat,type="l")
#autocorrelation function plot
acf(dat$Low,na.action = na.pass)
setwd("~/Desktop/531w18/hw02")
dat <- read.table(file="http://ionides.github.io/531w18/01/ann_arbor_weather.csv",header=TRUE)
#time plot
plot(Low~Year,data=dat,type="l")
#autocorrelation function plot
acf(dat$Low,na.action = na.pass)
#time plot
plot(Low~Year,data=dat,type="l")
#autocorrelation function plot
acf(dat$Low,na.action = na.pass)
aic_table <- function(data,P,Q){
table <- matrix(NA,(P+1),(Q+1))
for(p in 0:P) {
for(q in 0:Q) {
table[p+1,q+1] <- arima(data,order=c(p,0,q))$aic
}
}
dimnames(table) <- list(paste("<b> AR",0:P, "</b>", sep=""),paste("MA",0:Q,sep=""))
table
}
dat_aic_table <- aic_table(dat$Low,4,5)
dat_aic_table
dat_aic_table <- aic_table(dat$Low,7,7)
dat_aic_table
#autocorrelation function plot
acf(dat$Low,na.action = na.pass)
#time plot
plot(Low~Year,data=dat,type="l")
#Fit many ARMA models, using AIC as model selection criteria
aic_table <- function(data,P,Q){
table <- matrix(NA,(P+1),(Q+1))
for(p in 0:P) {
for(q in 0:Q) {
table[p+1,q+1] <- arima(data,order=c(p,0,q))$aic
}
}
dimnames(table) <- list(paste("<b> AR",0:P, "</b>", sep=""),paste("MA",0:Q,sep=""))
table
}
dat_aic_table <- aic_table(dat$Low,5,5)
dat_aic_table
#Lowest AIC suggests ARMA(1,1), ARMA(2,1), ARMA(1,2), ARMA(2,5)
arma22 = arima(dat$Low,order = c(1,0,1))
arma22
#Get roots of the AR polynomial
AR_roots = polyroot(c(1,-coef(arma22)[c("ar1")]))
abs(AR_roots) #outside unit circle -- suggest stationary causal ARMA model
#Lowest AIC suggests ARMA(1,1), ARMA(2,1), ARMA(1,2), ARMA(2,5)
arma11 = arima(dat$Low,order = c(1,0,1))
arma11
#Get roots of the AR polynomial
AR_roots = polyroot(c(1,-coef(arma11)[c("ar1")]))
abs(AR_roots) #outside unit circle -- suggest stationary causal ARMA model
abs(AR_roots) #outside unit circle -- suggest stationary causal ARMA model
#Get roots of the MA polynomial
MA_roots = polyroot(c(1,-coef(arma11)[c("ma1")]))
abs(MA_roots) #not all outside unit circle -- implying model is not invertible
#
K <- 500
ma1 <- seq(from=0.2,to=1.1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Low,order=c(1,0,1),
fixed=c(NA,ma1[k],NA)))
}
#Profile likelihood plot
plot(profile_loglik~ma1,ty="l")
arma11
#
K <- 500
ma1 <- seq(from=-1.1,to=1.1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Low,order=c(1,0,1),
fixed=c(NA,ma1[k],NA)))
}
#Profile likelihood plot
plot(profile_loglik~ma1,ty="l")
#
K <- 500
ma1 <- seq(from=-1,to=1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Low,order=c(1,0,1),
fixed=c(NA,ma1[k],NA)))
}
#Profile likelihood plot
plot(profile_loglik~ma1,ty="l")
ma1_max = ma1[which.max(profile_loglik)]
ma1_prof_conf = ma1[which(profile_loglik[which.max(profile_loglik)] - profile_loglik < 1.92)]
# 95% Profile likelihood interval
round(c(min(ma1_prof_conf), max(ma1_prof_conf)),4)
ma1_max
#MA1 Analysis
#
K <- 500
ma1 <- seq(from=-0.9,to=1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Low,order=c(1,0,1),
fixed=c(NA,ma1[k],NA)))
}
#Profile likelihood plot
plot(profile_loglik~ma1,ty="l")
#MA1 Analysis
#
K <- 500
ma1 <- seq(from=-0.9,to=0.9,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Low,order=c(1,0,1),
fixed=c(NA,ma1[k],NA)))
}
#Profile likelihood plot
plot(profile_loglik~ma1,ty="l")
ma1_max = ma1[which.max(profile_loglik)]
ma1_prof_conf = ma1[which(profile_loglik[which.max(profile_loglik)] - profile_loglik < 1.92)]
# 95% Profile likelihood interval
round(c(min(ma1_prof_conf), max(ma1_prof_conf)),4)
arma11$var.coef
# 95% wald confidence interval
round(arma11$coef['ma1'] + c(-1,1) * 1.96*sqrt(arma11$var.coef[2,2]),4)
# 95% Profile likelihood interval
round(c(min(ma1_prof_conf), max(ma1_prof_conf)),4)
# 95% wald confidence interval
round(arma11$coef['ma1'] + c(-1,1) * 1.96*sqrt(arma11$var.coef[2,2]),4)
#Simulation study for MA1 & AR1 coefficient
set.seed(57892330)
J <- 1000
params <- coef(arma11)
ar <- params[grep("^ar",names(params))]
ma <- params[grep("^ma",names(params))]
intercept <- params["intercept"]
sigma <- sqrt(arma22$sigma2)
theta <- matrix(NA,nrow=J,ncol=length(params),dimnames=list(NULL,names(params)))
for(j in 1:J){
Yj <- arima.sim(
list(ar=ar,ma=ma),
n=length(dat$Low),
sd=sigma
)+intercept
theta[j,] <- coef(arima(Yj,order=c(1,0,1)))
}
hist(theta[,"ma1"],freq=FALSE)
#MA1 Analysis
#
K <- 500
ma1 <- seq(from=-1.1,to=1.1,length=K)
profile_loglik <- rep(NA,K)
for(k in 1:K){
profile_loglik[k] <- logLik(arima(dat$Low,order=c(1,0,1),
fixed=c(NA,ma1[k],NA)))
}
#Profile likelihood plot
plot(profile_loglik~ma1,ty="l")
# 95% wald confidence interval
round(arma11$coef['ma1'] + c(-1,1) * 1.96*sqrt(arma11$var.coef[2,2]),4)
hist(theta[,"ar1"],freq=FALSE)
hist(theta[,"ma1"],freq=FALSE)
hist(theta[,"ar1"],freq=FALSE)
plot(density(theta[,"ar2"],bw=0.05,na.rm = T))
plot(density(theta[,"ar1"],bw=0.05,na.rm = T))
head(dat)
?write.csv
write.csv(dat,'mich_jan_dat.csv',row.names=F)
setwd("~/Desktop/531w18/hw03")
write.csv(dat,'mich_jan_dat.csv',row.names=F)
?arima
#Get roots of the AR polynomial
AR_roots = polyroot(c(1,-coef(arma11)[c("ar1")]))
abs(AR_roots) #outside unit circle -- suggest stationary causal ARMA model
1/.84
1/.7972
#Get roots of the MA polynomial
MA_roots = polyroot(c(1,-coef(arma11)[c("ma1")]))
abs(MA_roots) #outside unit circle -- implying model is invertible
# 95% wald confidence interval
round(arma11$coef['ma1'] + c(-1,1) * 1.96*sqrt(arma11$var.coef[2,2]),4)
#Simulation study for MA1 & AR1 coefficient
set.seed(57892330)
J <- 1000
params <- coef(arma11)
ar <- params[grep("^ar",names(params))]
ma <- params[grep("^ma",names(params))]
intercept <- params["intercept"]
sigma <- sqrt(arma11$sigma2)
theta <- matrix(NA,nrow=J,ncol=length(params),dimnames=list(NULL,names(params)))
for(j in 1:J){
Yj <- arima.sim(
list(ar=ar,ma=ma),
n=length(dat$Low),
sd=sigma
)+intercept
theta[j,] <- coef(arima(Yj,order=c(1,0,1)))
}
arma22
#Simulation study for MA1 & AR1 coefficient
set.seed(57892330)
J <- 1000
params <- coef(arma11)
ar <- params[grep("^ar",names(params))]
ma <- params[grep("^ma",names(params))]
intercept <- params["intercept"]
sigma <- sqrt(arma22$sigma2)
theta <- matrix(NA,nrow=J,ncol=length(params),dimnames=list(NULL,names(params)))
for(j in 1:J){
Yj <- arima.sim(
list(ar=ar,ma=ma),
n=length(dat$Low),
sd=sigma
)+intercept
theta[j,] <- coef(arima(Yj,order=c(1,0,1)))
}
ar
ma
intercept
sigm
sigma
theta
#Simulation study for MA1 & AR1 coefficient
set.seed(57892330)
J <- 1000
params <- coef(arma11)
ar <- params[grep("^ar",names(params))]
ma <- params[grep("^ma",names(params))]
intercept <- params["intercept"]
sigma <- sqrt(arma11$sigma2)
theta <- matrix(NA,nrow=J,ncol=length(params),dimnames=list(NULL,names(params)))
for(j in 1:J){
Yj <- arima.sim(
list(ar=ar,ma=ma),
n=length(dat$Low),
sd=sigma
)+intercept
theta[j,] <- coef(arima(Yj,order=c(1,0,1)))
}
J <- 1000
params <- coef(arma11)
ar <- params[grep("^ar",names(params))]
ma <- params[grep("^ma",names(params))]
intercept <- params["intercept"]
sigma <- sqrt(arma11$sigma2)
theta <- matrix(NA,nrow=J,ncol=length(params),dimnames=list(NULL,names(params)))
for(j in 1:J){
Yj <- arima.sim(
list(ar=ar,ma=ma),
n=length(dat$Low),
sd=sigma
)+intercept
theta[j,] <- coef(arima(Yj,order=c(1,0,1)))
}
#Simulation study for MA1 & AR1 coefficient
set.seed(57892330)
J <- 1000
params <- coef(arma11)
ar <- params[grep("^ar",names(params))]
ma <- params[grep("^ma",names(params))]
intercept <- params["intercept"]
sigma <- sqrt(arma11$sigma2)
theta <- matrix(NA,nrow=J,ncol=length(params),dimnames=list(NULL,names(params)))
for(j in 1:J){
Yj <- arima.sim(
list(ar=ar,ma=ma),
n=length(dat$Low),
sd=sigma
)+intercept
theta[j,] <- coef(arima(Yj,order=c(1,0,1),method='ML'))
}
